{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/files/javascript/react/react-native/remider/app/components/body/layouts/blocksItem/BlocksItem.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { connect } from 'react-redux';\nimport { Icon as IconE } from 'react-native-elements';\nimport Icon from \"@expo/vector-icons/FontAwesome\";\n\nvar BlocksItem = function (_Component) {\n  _inherits(BlocksItem, _Component);\n\n  var _super = _createSuper(BlocksItem);\n\n  function BlocksItem(props) {\n    _classCallCheck(this, BlocksItem);\n\n    return _super.call(this, props);\n  }\n\n  _createClass(BlocksItem, [{\n    key: \"OnCheck\",\n    value: function OnCheck(id) {\n      this.props.toggleChech(id);\n    }\n  }, {\n    key: \"deleteTask\",\n    value: function deleteTask(id) {\n      var _this = this;\n\n      Alert.alert('Affirmation', 'vous voulez suprimer cette tache', [{\n        text: 'Cancel',\n        onPress: function onPress() {\n          return console.log('Cancel Pressed');\n        },\n        style: 'cancel'\n      }, {\n        text: 'OK',\n        onPress: function onPress() {\n          return _this.props.removeTask(id);\n        }\n      }], {\n        cancelable: false\n      });\n    }\n  }, {\n    key: \"ChangeShowPut\",\n    value: function ChangeShowPut(id) {\n      this.props.changeShowPut({\n        status: true,\n        id: id\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var data = this.props.data;\n      return React.createElement(TouchableOpacity, {\n        style: {\n          backgroundColor: data.finishTasks ? '#eee' : '#aaa',\n          flexDirection: 'row',\n          alignItems: 'center',\n          justifyContent: 'space-between',\n          padding: 10,\n          margin: 5,\n          borderRadius: 5\n        },\n        onPress: this.OnCheck.bind(this, data.idTasks),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: {\n          textDecorationLine: data.finishTasks ? 'line-through' : 'none',\n          fontWeight: 'bold',\n          fontSize: 24,\n          marginBottom: 3\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }\n      }, data.contentTasks), React.createElement(View, {\n        style: {\n          flexDirection: 'row'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }\n      }, React.createElement(Icon, {\n        name: data.finishTasks ? 'check' : 'calendar',\n        color: \"#517fa4\",\n        size: 20,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }\n      }), React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }\n      }, \"  \"), React.createElement(Text, {\n        style: {\n          opacity: 0.5,\n          textDecorationLine: data.finishTasks ? 'line-through' : 'none',\n          color: 'blue'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }\n      }, data.finishAt))), React.createElement(View, {\n        style: {\n          flexDirection: 'row'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }\n      }, React.createElement(IconE, {\n        raised: true,\n        name: \"edit\",\n        type: \"AntDesign\",\n        color: \"#517fa4\",\n        size: 20,\n        onPress: this.ChangeShowPut.bind(this, data.idTasks),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 17\n        }\n      }), React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 17\n        }\n      }, \"   \"), React.createElement(IconE, {\n        reverse: true,\n        name: \"delete\",\n        type: \"AntDesign\",\n        color: \"#f50\",\n        size: 20,\n        onPress: this.deleteTask.bind(this, data.idTasks),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 17\n        }\n      })));\n    }\n  }]);\n\n  return BlocksItem;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    tasks: state.Tasks\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    toggleChech: function toggleChech(id) {\n      dispatch({\n        type: 'TOGGLE_CHECK',\n        id: id\n      });\n    },\n    removeTask: function removeTask() {\n      dispatch({\n        type: 'REMOVE_TASKS'\n      });\n    },\n    changeShowPut: function changeShowPut(data) {\n      dispatch({\n        type: 'CHANGE_SHOW_PUT',\n        data: data\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BlocksItem);","map":{"version":3,"sources":["/home/files/javascript/react/react-native/remider/app/components/body/layouts/blocksItem/BlocksItem.js"],"names":["React","Component","connect","Icon","IconE","BlocksItem","props","id","toggleChech","Alert","alert","text","onPress","console","log","style","removeTask","cancelable","changeShowPut","status","data","backgroundColor","finishTasks","flexDirection","alignItems","justifyContent","padding","margin","borderRadius","OnCheck","bind","idTasks","textDecorationLine","fontWeight","fontSize","marginBottom","contentTasks","opacity","color","finishAt","ChangeShowPut","deleteTask","mapStateToProps","state","tasks","Tasks","mapDispatchToProps","dispatch","type"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { View, TouchableOpacity , Alert, Text } from 'react-native'\nimport { connect } from 'react-redux'\nimport { Icon as IconE } from 'react-native-elements'\nimport Icon from 'react-native-vector-icons/FontAwesome'\n\nclass BlocksItem extends Component {\n    constructor(props) {\n        super(props)\n    }\n\n    OnCheck (id) {\n        this.props.toggleChech(id)\n    }\n\n    deleteTask (id) {\n        Alert.alert(\n            'Affirmation',\n            'vous voulez suprimer cette tache',\n            [\n                {\n                    text: 'Cancel',\n                    onPress: () => console.log('Cancel Pressed'),\n                    style: 'cancel',\n                },\n                {text: 'OK', onPress: () => this.props.removeTask(id)},\n            ],\n            {cancelable: false},\n        );\n    }\n\n    ChangeShowPut (id) {\n        this.props.changeShowPut({ status: true, id: id})\n    }\n\n    render() {\n        const { data } = this.props\n        return (\n            <TouchableOpacity\n                style={{ \n                    backgroundColor: data.finishTasks? '#eee': '#aaa', \n                    flexDirection: 'row', \n                    alignItems: 'center',\n                    justifyContent: 'space-between',\n                    padding: 10,\n                    margin: 5,\n                    borderRadius: 5\n                }}\n                onPress={this.OnCheck.bind(this, data.idTasks)}>\n            <View>\n                <Text \n                    style={{\n                        textDecorationLine: data.finishTasks? 'line-through': 'none',\n                        fontWeight: 'bold',\n                        fontSize: 24,\n                        marginBottom: 3\n                    }}\n                >\n                    { data.contentTasks } \n                </Text> \n                <View style={{ flexDirection: 'row' }}>\n                    <Icon\n                        name={data.finishTasks? 'check': 'calendar'}\n                        color='#517fa4'\n                        size={20}\n                    />\n                        <Text>{\"  \"}</Text>\n                    <Text \n                    style={{ \n                        opacity: 0.5, \n                        textDecorationLine: data.finishTasks? 'line-through': 'none',\n                        color: 'blue'\n                    }}> \n                        { data.finishAt } \n                    </Text> \n                </View>\n            </View>\n            <View style={{ flexDirection: 'row' }}>\n                <IconE\n                    raised\n                    name='edit'\n                    type='AntDesign'\n                    // color='#9b9b9b'\n                    color='#517fa4'\n                    size={20}\n                    onPress={ this.ChangeShowPut.bind(this, data.idTasks) }\n                /> \n\n                <Text>{\"   \"}</Text>\n\n                <IconE\n                    reverse\n                    name='delete'\n                    type='AntDesign'\n                    color='#f50'\n                    size={20}\n                    onPress={this.deleteTask.bind(this, data.idTasks)}\n                /> \n                </View>\n            </TouchableOpacity>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {  tasks: state.Tasks }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        toggleChech: (id) => {\n            dispatch({ type: 'TOGGLE_CHECK', id })\n        },\n        removeTask: () => {\n            dispatch({ type: 'REMOVE_TASKS'})\n        },\n        changeShowPut: (data) => {\n            dispatch({ type: 'CHANGE_SHOW_PUT', data})\n        }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BlocksItem)\n"]},"metadata":{},"sourceType":"module"}