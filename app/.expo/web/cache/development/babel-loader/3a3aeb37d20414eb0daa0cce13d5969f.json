{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/files/javascript/react/react-native/remider/app/components/AppAnnex.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Provider } from 'react-redux';\nimport store from \"../store\";\nimport Header from \"./header/Header\";\nimport Body from \"./body/Body\";\nimport { Button, Icon } from 'react-native-elements';\nimport { connect } from 'react-redux';\n\nvar AppAnnex = function (_Component) {\n  _inherits(AppAnnex, _Component);\n\n  var _super = _createSuper(AppAnnex);\n\n  function AppAnnex() {\n    _classCallCheck(this, AppAnnex);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(AppAnnex, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return React.createElement(Provider, {\n        store: store,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: styles.root,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }\n      }, React.createElement(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 25\n        }\n      }), React.createElement(Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 25\n        }\n      })), React.createElement(View, {\n        style: styles.iconAdd,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }\n      }, !this.props.tasks.showEdit ? React.createElement(Icon, {\n        reverse: true,\n        name: \"add\",\n        type: \"MaterialIcons\",\n        color: \"#f50\",\n        size: 30,\n        onPress: function onPress() {\n          return _this.props.changeShowEdit(true);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 33\n        }\n      }) : null)));\n    }\n  }]);\n\n  return AppAnnex;\n}(Component);\n\nvar styles = StyleSheet.create({\n  root: {\n    flex: 1\n  },\n  iconAdd: {\n    flex: 1,\n    position: 'absolute',\n    bottom: 20,\n    right: 30,\n    marginLeft: 10\n  }\n});\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    tasks: state.Tasks\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    changeShowEdit: function changeShowEdit(data) {\n      dispatch({\n        type: 'CHANGE_SHOW_EDIT',\n        data: data\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AppAnnex);","map":{"version":3,"sources":["/home/files/javascript/react/react-native/remider/app/components/AppAnnex.js"],"names":["React","Component","Provider","store","Header","Body","Button","Icon","connect","AppAnnex","styles","root","iconAdd","props","tasks","showEdit","changeShowEdit","StyleSheet","create","flex","position","bottom","right","marginLeft","mapStateToProps","state","Tasks","mapDispatchToProps","dispatch","data","type"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAiBC,SAAjB,QAAkC,OAAlC;;;;;;AAYA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,KAAP;AAEA,OAAOC,MAAP;AACA,OAAOC,IAAP;AACA,SAAQC,MAAR,EAAgBC,IAAhB,QAA2B,uBAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;;IAGMC,Q;;;;;;;;;;;;;6BACQ;AAAA;;AACN,aACI,oBAAC,QAAD;AAAU,QAAA,KAAK,EAAEN,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEO,MAAM,CAACC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CADJ,EAKI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAED,MAAM,CAACE,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEQ,CAAC,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,QAAlB,GAEI,oBAAC,IAAD;AACI,QAAA,OAAO,MADX;AAEI,QAAA,IAAI,EAAC,KAFT;AAGI,QAAA,IAAI,EAAC,eAHT;AAII,QAAA,KAAK,EAAC,MAJV;AAKI,QAAA,IAAI,EAAE,EALV;AAMI,QAAA,OAAO,EAAE;AAAA,iBAAM,KAAI,CAACF,KAAL,CAAWG,cAAX,CAA0B,IAA1B,CAAN;AAAA,SANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,GASS,IAXjB,CALJ,CADJ,CADJ;AAwBH;;;;EA1BkBf,S;;AA6BvB,IAAMS,MAAM,GAAGO,UAAU,CAACC,MAAX,CAAkB;AAC7BP,EAAAA,IAAI,EAAE;AACFQ,IAAAA,IAAI,EAAE;AADJ,GADuB;AAI7BP,EAAAA,OAAO,EAAE;AACLO,IAAAA,IAAI,EAAE,CADD;AAELC,IAAAA,QAAQ,EAAE,UAFL;AAGLC,IAAAA,MAAM,EAAE,EAHH;AAILC,IAAAA,KAAK,EAAE,EAJF;AAKLC,IAAAA,UAAU,EAAE;AALP;AAJoB,CAAlB,CAAf;;AAcA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK,EAAI;AAC7B,SAAO;AAAGX,IAAAA,KAAK,EAAEW,KAAK,CAACC;AAAhB,GAAP;AACH,CAFD;;AAIA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ,EAAI;AACnC,SAAO;AACHZ,IAAAA,cAAc,EAAE,wBAACa,IAAD,EAAU;AACtBD,MAAAA,QAAQ,CAAC;AAAEE,QAAAA,IAAI,EAAE,kBAAR;AAA4BD,QAAAA,IAAI,EAAJA;AAA5B,OAAD,CAAR;AACH;AAHE,GAAP;AAKH,CAND;;AAQA,eAAerB,OAAO,CAACgB,eAAD,EAAkBG,kBAAlB,CAAP,CAA6ClB,QAA7C,CAAf","sourcesContent":["import React , { Component } from 'react';\nimport {\n    SafeAreaView,\n    StyleSheet,\n    ScrollView,\n    StatusBar,\n    View\n} from 'react-native';\n\n// import {\n//   Colors,\n// } from 'react-native/Libraries/NewAppScreen';\nimport { Provider } from 'react-redux'\nimport store from '../store'\n\nimport Header from './header/Header'\nimport Body from './body/Body'\nimport {Button, Icon} from 'react-native-elements'\nimport { connect } from 'react-redux'\n// import Login from './components/login/Login'\n\nclass AppAnnex extends Component {\n    render () {\n        return (\n            <Provider store={store}>\n                <View style={styles.root}>\n                    <View>\n                        <Header/>\n                        <Body/>\n                    </View>\n                    <View style={styles.iconAdd}>\n                        {\n                            !this.props.tasks.showEdit\n                                ?\n                                <Icon\n                                    reverse\n                                    name='add'\n                                    type='MaterialIcons'\n                                    color='#f50'\n                                    size={30}\n                                    onPress={() => this.props.changeShowEdit(true)}\n                                /> : null\n                        }\n                    </View>\n                </View>\n            </Provider>\n        )\n    }\n}\n\nconst styles = StyleSheet.create({\n    root: {\n        flex: 1\n    },\n    iconAdd: {\n        flex: 1,\n        position: 'absolute',\n        bottom: 20,\n        right: 30,\n        marginLeft: 10\n    }\n});\n\n\nconst mapStateToProps = state => {\n    return {  tasks: state.Tasks }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        changeShowEdit: (data) => {\n            dispatch({ type: 'CHANGE_SHOW_EDIT', data })\n        }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AppAnnex);\n"]},"metadata":{},"sourceType":"module"}