{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/files/javascript/react/react-native/remider/app/components/header/Header.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Input from \"./layouts/input/Input\";\nimport { Button, Text } from 'react-native-elements';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { connect } from 'react-redux';\n\nvar Header = function (_Component) {\n  _inherits(Header, _Component);\n\n  var _super = _createSuper(Header);\n\n  function Header() {\n    _classCallCheck(this, Header);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Header, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: styles.root,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 13\n        }\n      }, this.props.tasks.showEdit ? React.createElement(Input, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 23\n        }\n      }) : null);\n    }\n  }]);\n\n  return Header;\n}(Component);\n\nvar styles = StyleSheet.create({\n  root: {\n    margin: 5\n  }\n});\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    tasks: state.Tasks\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    changeShowEdit: function changeShowEdit(data) {\n      dispatch({\n        type: 'CHANGE_SHOW_EDIT',\n        data: data\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);","map":{"version":3,"sources":["/home/files/javascript/react/react-native/remider/app/components/header/Header.js"],"names":["React","Component","Input","Button","Text","connect","Header","styles","root","props","tasks","showEdit","StyleSheet","create","margin","mapStateToProps","state","Tasks","mapDispatchToProps","dispatch","changeShowEdit","data","type"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,uBAA7B;;;AAEA,SAASC,OAAT,QAAwB,aAAxB;;IAGMC,M;;;;;;;;;;;;;6BACQ;AACN,aACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAGC,MAAM,CAACC,IAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEQ,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,QAAjB,GACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,GACa,IAHrB,CADJ;AAQH;;;;EAVgBV,S;;AAarB,IAAMM,MAAM,GAAGK,UAAU,CAACC,MAAX,CAAkB;AAC7BL,EAAAA,IAAI,EAAE;AACFM,IAAAA,MAAM,EAAE;AADN;AADuB,CAAlB,CAAf;;AAOA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK,EAAI;AAC7B,SAAO;AAAGN,IAAAA,KAAK,EAAEM,KAAK,CAACC;AAAhB,GAAP;AACH,CAFD;;AAIA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ,EAAI;AACnC,SAAO;AACHC,IAAAA,cAAc,EAAE,wBAACC,IAAD,EAAU;AACtBF,MAAAA,QAAQ,CAAC;AAAEG,QAAAA,IAAI,EAAE,kBAAR;AAA4BD,QAAAA,IAAI,EAAJA;AAA5B,OAAD,CAAR;AACH;AAHE,GAAP;AAKH,CAND;;AAQA,eAAehB,OAAO,CAACU,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CZ,MAA7C,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport Input from './layouts/input/Input'\nimport { Button, Text } from 'react-native-elements';\nimport { View, StyleSheet } from \"react-native\";\nimport { connect } from 'react-redux'\n\n\nclass Header extends Component {\n    render () {\n        return (\n            <View style={ styles.root }>\n                {\n                    this.props.tasks.showEdit\n                    ? <Input/> : null\n                }\n            </View>\n        )\n    }\n}\n\nconst styles = StyleSheet.create({\n    root: {\n        margin: 5\n    }\n});\n\n\nconst mapStateToProps = state => {\n    return {  tasks: state.Tasks }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        changeShowEdit: (data) => {\n            dispatch({ type: 'CHANGE_SHOW_EDIT', data })\n        }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header)\n"]},"metadata":{},"sourceType":"module"}