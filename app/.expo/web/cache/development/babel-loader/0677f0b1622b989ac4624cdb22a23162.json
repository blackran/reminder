{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport { ADD_TASKS, REMOVE_TASKS, TOGGLE_CHECK, INIT_DATA, CHANGE_SHOW_EDIT, CHANGE_SHOW_PUT, CHANGE_TASKS } from \"../actions/TasksActions\";\nimport shortid from 'shortid';\nimport AsyncStorage from '@react-native-community/async-storage';\nvar initState = {\n  dataTasks: [],\n  showEdit: false,\n  length: 0,\n  idEdit: false\n};\n\nvar TasksReducers = function TasksReducers() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  state.length = state.dataTasks.filter(function (e) {\n    return e.finishTasks === true;\n  }).length;\n\n  switch (action.type) {\n    case ADD_TASKS:\n      var stock = [].concat(_toConsumableArray(state.dataTasks), [{\n        idTasks: shortid.generate(),\n        contentTasks: action.data.contentTasks,\n        finishTasks: false,\n        finishAt: action.data.finishAt,\n        createAt: Date.now()\n      }]);\n      AsyncStorage.setItem('todoNante', JSON.stringify(stock));\n      return _extends({}, state, {\n        dataTasks: stock\n      });\n\n    case INIT_DATA:\n      return _extends({}, state, {\n        dataTasks: action.data\n      });\n\n    case REMOVE_TASKS:\n      var stock = state.dataTasks.filter(function (e) {\n        return e.finishTasks !== true;\n      });\n      AsyncStorage.setItem('todoNante', JSON.stringify(stock));\n      return _extends({}, state, {\n        dataTasks: stock\n      });\n\n    case CHANGE_SHOW_EDIT:\n      return _extends({}, state, {\n        showEdit: action.data\n      });\n\n    case CHANGE_TASKS:\n      var const_change_tasks = state.dataTasks.map(function (e) {\n        var stock = e;\n\n        if (e.idTasks === action.data.idTasks) {\n          stock = {\n            idTasks: e.idTasks,\n            contentTasks: e.contentTasks,\n            finishTasks: e.finishTasks,\n            finishAt: e.finishAt,\n            createAt: e.createAt\n          };\n        }\n\n        return stock;\n      });\n      return _extends({}, state, {\n        dataTasks: const_change_tasks\n      });\n\n    case CHANGE_SHOW_PUT:\n      return _extends({}, state, {\n        showEdit: action.data.status,\n        idEdit: action.data.id\n      });\n\n    case TOGGLE_CHECK:\n      var stock = state.dataTasks.filter(function (e) {\n        return e.idTasks === action.id;\n      })[0];\n      var stocknot = state.dataTasks.filter(function (e) {\n        return e.idTasks !== action.id;\n      });\n      var stocks = {\n        idTasks: stock.idTasks,\n        contentTasks: stock.contentTasks,\n        finishTasks: !stock.finishTasks,\n        finishAt: stock.finishAt,\n        createAt: stock.createAt\n      };\n      AsyncStorage.setItem('todoNante', JSON.stringify([].concat(_toConsumableArray(stocknot), [stocks])));\n      return _extends({}, state, {\n        dataTasks: [].concat(_toConsumableArray(stocknot), [stocks])\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default TasksReducers;","map":{"version":3,"sources":["/home/files/javascript/react/react-native/remider/app/reducers/TasksReducers.js"],"names":["ADD_TASKS","REMOVE_TASKS","TOGGLE_CHECK","INIT_DATA","CHANGE_SHOW_EDIT","CHANGE_SHOW_PUT","CHANGE_TASKS","shortid","AsyncStorage","initState","dataTasks","showEdit","length","idEdit","TasksReducers","state","action","filter","e","finishTasks","type","stock","idTasks","generate","contentTasks","data","finishAt","createAt","Date","now","setItem","JSON","stringify","const_change_tasks","map","status","id","stocknot","stocks"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,YAApB,EAAkCC,YAAlC,EAAgDC,SAAhD,EAA2DC,gBAA3D,EAA6EC,eAA7E,EAA8FC,YAA9F;AACA,OAAOC,OAAP,MAAoB,SAApB;AACA,OAAQC,YAAR,MAA2B,uCAA3B;AAEA,IAAMC,SAAS,GAAG;AACdC,EAAAA,SAAS,EAAE,EADG;AAUdC,EAAAA,QAAQ,EAAE,KAVI;AAWdC,EAAAA,MAAM,EAAE,CAXM;AAYdC,EAAAA,MAAM,EAAE;AAZM,CAAlB;;AAeA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAA+B;AAAA,MAA9BC,KAA8B,uEAAtBN,SAAsB;AAAA,MAAXO,MAAW;AACjDD,EAAAA,KAAK,CAACH,MAAN,GAAeG,KAAK,CAACL,SAAN,CAAgBO,MAAhB,CAAuB,UAAAC,CAAC,EAAI;AAAE,WAAOA,CAAC,CAACC,WAAF,KAAkB,IAAzB;AAA+B,GAA7D,EAA+DP,MAA9E;;AACA,UAAQI,MAAM,CAACI,IAAf;AACI,SAAKpB,SAAL;AACI,UAAIqB,KAAK,gCACFN,KAAK,CAACL,SADJ,IAEL;AACIY,QAAAA,OAAO,EAAEf,OAAO,CAACgB,QAAR,EADb;AAEIC,QAAAA,YAAY,EAAER,MAAM,CAACS,IAAP,CAAYD,YAF9B;AAGIL,QAAAA,WAAW,EAAE,KAHjB;AAIIO,QAAAA,QAAQ,EAAEV,MAAM,CAACS,IAAP,CAAYC,QAJ1B;AAKIC,QAAAA,QAAQ,EAAEC,IAAI,CAACC,GAAL;AALd,OAFK,EAAT;AAUArB,MAAAA,YAAY,CAACsB,OAAb,CAAqB,WAArB,EAAkCC,IAAI,CAACC,SAAL,CAAeX,KAAf,CAAlC;AACA,aAAO,SACH,EADG,EACCN,KADD,EAED;AAACL,QAAAA,SAAS,EAAEW;AAAZ,OAFC,CAAP;;AAIJ,SAAKlB,SAAL;AAEI,aAAO,SACH,EADG,EACCY,KADD,EAED;AAACL,QAAAA,SAAS,EAAEM,MAAM,CAACS;AAAnB,OAFC,CAAP;;AAIJ,SAAKxB,YAAL;AACI,UAAIoB,KAAK,GAAGN,KAAK,CAACL,SAAN,CAAgBO,MAAhB,CAAuB,UAAAC,CAAC,EAAI;AACpC,eAAOA,CAAC,CAACC,WAAF,KAAkB,IAAzB;AACH,OAFW,CAAZ;AAGAX,MAAAA,YAAY,CAACsB,OAAb,CAAqB,WAArB,EAAkCC,IAAI,CAACC,SAAL,CAAeX,KAAf,CAAlC;AACA,aAAO,SAAc,EAAd,EAAkBN,KAAlB,EAAyB;AAAEL,QAAAA,SAAS,EAAEW;AAAb,OAAzB,CAAP;;AACJ,SAAKjB,gBAAL;AACI,aAAO,SAAc,EAAd,EAAkBW,KAAlB,EAAyB;AAACJ,QAAAA,QAAQ,EAAEK,MAAM,CAACS;AAAlB,OAAzB,CAAP;;AAEJ,SAAKnB,YAAL;AACI,UAAI2B,kBAAkB,GAAGlB,KAAK,CAACL,SAAN,CAAgBwB,GAAhB,CAAoB,UAAAhB,CAAC,EAAI;AAC9C,YAAIG,KAAK,GAAGH,CAAZ;;AACA,YAAIA,CAAC,CAACI,OAAF,KAAcN,MAAM,CAACS,IAAP,CAAYH,OAA9B,EAAuC;AACnCD,UAAAA,KAAK,GAAG;AACJC,YAAAA,OAAO,EAAEJ,CAAC,CAACI,OADP;AAEJE,YAAAA,YAAY,EAAEN,CAAC,CAACM,YAFZ;AAGJL,YAAAA,WAAW,EAAED,CAAC,CAACC,WAHX;AAIJO,YAAAA,QAAQ,EAAER,CAAC,CAACQ,QAJR;AAKJC,YAAAA,QAAQ,EAAET,CAAC,CAACS;AALR,WAAR;AAOH;;AACD,eAAON,KAAP;AACH,OAZwB,CAAzB;AAaA,aAAO,SAAc,EAAd,EAAkBN,KAAlB,EAAyB;AAACL,QAAAA,SAAS,EAAEuB;AAAZ,OAAzB,CAAP;;AAEJ,SAAK5B,eAAL;AACI,aAAO,SAAc,EAAd,EAAkBU,KAAlB,EAAyB;AAACJ,QAAAA,QAAQ,EAAEK,MAAM,CAACS,IAAP,CAAYU,MAAvB;AAA+BtB,QAAAA,MAAM,EAAEG,MAAM,CAACS,IAAP,CAAYW;AAAnD,OAAzB,CAAP;;AAEJ,SAAKlC,YAAL;AACI,UAAImB,KAAK,GAAGN,KAAK,CAACL,SAAN,CAAgBO,MAAhB,CAAuB,UAAAC,CAAC,EAAI;AACpC,eAAOA,CAAC,CAACI,OAAF,KAAcN,MAAM,CAACoB,EAA5B;AACH,OAFW,EAET,CAFS,CAAZ;AAGA,UAAIC,QAAQ,GAAGtB,KAAK,CAACL,SAAN,CAAgBO,MAAhB,CAAuB,UAAAC,CAAC,EAAI;AACvC,eAAOA,CAAC,CAACI,OAAF,KAAcN,MAAM,CAACoB,EAA5B;AACH,OAFc,CAAf;AAGA,UAAIE,MAAM,GAAG;AACThB,QAAAA,OAAO,EAAED,KAAK,CAACC,OADN;AAETE,QAAAA,YAAY,EAAEH,KAAK,CAACG,YAFX;AAGTL,QAAAA,WAAW,EAAE,CAACE,KAAK,CAACF,WAHX;AAITO,QAAAA,QAAQ,EAAEL,KAAK,CAACK,QAJP;AAKTC,QAAAA,QAAQ,EAAEN,KAAK,CAACM;AALP,OAAb;AAOAnB,MAAAA,YAAY,CAACsB,OAAb,CAAqB,WAArB,EAAkCC,IAAI,CAACC,SAAL,8BAAmBK,QAAnB,IAA6BC,MAA7B,GAAlC;AACA,aAAO,SACP,EADO,EACHvB,KADG,EAEL;AAACL,QAAAA,SAAS,+BAAM2B,QAAN,IAAgBC,MAAhB;AAAV,OAFK,CAAP;;AAIJ;AACI,aAAOvB,KAAP;AAvER;AAyEH,CA3ED;;AA6EA,eAAeD,aAAf","sourcesContent":["import { ADD_TASKS, REMOVE_TASKS, TOGGLE_CHECK, INIT_DATA, CHANGE_SHOW_EDIT, CHANGE_SHOW_PUT, CHANGE_TASKS } from '../actions/TasksActions'\nimport shortid from 'shortid'\nimport  AsyncStorage  from '@react-native-community/async-storage'\n\nconst initState = {\n    dataTasks: [\n        // {\n        //     idTasks: 1,\n        //     contentTasks: 'matory',\n        //     finishTasks: true,\n        //     finishAt: ''\n        //     createAt: ''\n        // }\n    ],\n    showEdit: false,\n    length: 0,\n    idEdit: false\n}\n\nconst TasksReducers = (state = initState, action) => {\n    state.length = state.dataTasks.filter(e => { return e.finishTasks === true }).length\n    switch (action.type) {\n        case ADD_TASKS:\n            var stock = [\n                ...state.dataTasks, \n                { \n                    idTasks: shortid.generate(), \n                    contentTasks: action.data.contentTasks, \n                    finishTasks: false, \n                    finishAt: action.data.finishAt,\n                    createAt: Date.now() \n                } \n            ]\n            AsyncStorage.setItem('todoNante', JSON.stringify(stock))\n            return Object.assign(\n                {}, state\n                , {dataTasks: stock}\n            )\n        case INIT_DATA:\n            // AsyncStorage.removeItem('todoNante')\n            return Object.assign(\n                {}, state\n                , {dataTasks: action.data}\n            )\n        case REMOVE_TASKS:\n            var stock = state.dataTasks.filter(e => {\n                return e.finishTasks !== true\n            })\n            AsyncStorage.setItem('todoNante', JSON.stringify(stock))\n            return Object.assign({}, state, { dataTasks: stock })\n        case CHANGE_SHOW_EDIT:\n            return Object.assign({}, state, {showEdit: action.data})\n\n        case CHANGE_TASKS:\n            let const_change_tasks = state.dataTasks.map(e => {\n                let stock = e\n                if (e.idTasks === action.data.idTasks) {\n                    stock = {        \n                        idTasks: e.idTasks,\n                        contentTasks: e.contentTasks,\n                        finishTasks: e.finishTasks,\n                        finishAt: e.finishAt,\n                        createAt: e.createAt\n                    }\n                }\n                return stock\n            })\n            return Object.assign({}, state, {dataTasks: const_change_tasks})\n\n        case CHANGE_SHOW_PUT:\n            return Object.assign({}, state, {showEdit: action.data.status, idEdit: action.data.id})\n\n        case TOGGLE_CHECK:\n            var stock = state.dataTasks.filter(e => {\n                return e.idTasks === action.id\n            })[0]\n            var stocknot = state.dataTasks.filter(e => {\n                return e.idTasks !== action.id\n            })\n            var stocks = { \n                idTasks: stock.idTasks, \n                contentTasks: stock.contentTasks, \n                finishTasks: !stock.finishTasks, \n                finishAt: stock.finishAt,\n                createAt: stock.createAt \n            }\n            AsyncStorage.setItem('todoNante', JSON.stringify([...stocknot, stocks ]))\n            return Object.assign(\n            {}, state\n            , {dataTasks: [...stocknot, stocks ]}\n        )\n        default:\n            return state\n    }\n}\n\nexport default TasksReducers\n"]},"metadata":{},"sourceType":"module"}