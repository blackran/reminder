{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/files/javascript/react/react-native/remider/app/components/header/layouts/input/Input.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { Button } from 'react-native-elements';\nimport { Icon } from 'react-native-elements';\nimport { connect } from \"react-redux\";\nimport { ADD_TASKS } from \"../../../../actions/TasksActions\";\nimport DatePicker from 'react-native-datepicker';\n\nvar Input = function (_Component) {\n  _inherits(Input, _Component);\n\n  var _super = _createSuper(Input);\n\n  function Input(props) {\n    var _this;\n\n    _classCallCheck(this, Input);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      value: '',\n      maxLength: 20,\n      date: _this.formatDateNow(),\n      idEdit: null\n    };\n    return _this;\n  }\n\n  _createClass(Input, [{\n    key: \"addTask\",\n    value: function addTask() {\n      var _this$state = this.state,\n          value = _this$state.value,\n          date = _this$state.date;\n\n      if (value.length !== 0) {\n        if (!this.props.tasks.isEdit) {\n          this.props.changeShowEdit(false);\n          var data = {\n            contentTasks: value,\n            finishAt: date,\n            idTasks: this.state.idEdit\n          };\n          this.props.changeTasks(data);\n        } else {\n          Keyboard.dismiss();\n          this.props.changeShowEdit(false);\n          var _data = {\n            contentTasks: value,\n            finishAt: date\n          };\n          this.props.addTasks(_data);\n        }\n      }\n    }\n  }, {\n    key: \"formatDateNow\",\n    value: function formatDateNow() {\n      var date = new Date();\n      var dd = date.getDate();\n      var mm = date.getMonth() + 1;\n      var yyyy = date.getFullYear();\n\n      if (dd < 10) {\n        dd = '0' + dd;\n      }\n\n      if (mm < 10) {\n        mm = '0' + mm;\n      }\n\n      var today = dd + '-' + mm + '-' + yyyy;\n      return today;\n    }\n  }, {\n    key: \"annullerTask\",\n    value: function annullerTask() {\n      Keyboard.dismiss();\n      this.props.changeShowEdit(false);\n    }\n  }, {\n    key: \"OnChange\",\n    value: function OnChange(text) {\n      if (this.state.value.length <= this.state.maxLength) {\n        this.setState({\n          value: text\n        });\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      if (this.props.tasks.idEdit != this.state.idEdit && this.props.tasks.idEdit != '') {\n        var tasks = this.props.tasks;\n        var stock = tasks.dataTasks.filter(function (e) {\n          return e.idTasks === tasks.idEdit;\n        });\n        this.setState({\n          idEdit: JSON.parse(JSON.stringify(this.props.tasks.idEdit))\n        });\n\n        if (stock.length != 0) {\n          this.setState({\n            value: stock[0].contentTasks,\n            date: stock[0].finishAt\n          });\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: {\n          height: 120,\n          marginBottom: 40,\n          marginTop: 30\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: {\n          backgroundColor: '#eceff1',\n          height: 200,\n          padding: 10,\n          borderRadius: 5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: {\n          marginLeft: 10,\n          marginBottom: 3\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }\n      }, this.state.value.length, \" /\", this.state.maxLength), React.createElement(TextInput, {\n        placeholder: \"enter votre tache\",\n        value: this.state.value,\n        onChangeText: this.OnChange.bind(this),\n        maxLength: this.state.maxLength,\n        onKeyUp: function onKeyUp(e) {\n          if (e.nativeEvent.key === 'Backspace') {\n            if (Math.abs(_this2.lastKeyEventTimestamp - e.timeStamp) <= 20) return;\n\n            _this2.setState({\n              value: _this2.state.value.pop()\n            });\n          } else {\n            _this2.lastKeyEventTimestamp = e.timeStamp;\n          }\n        },\n        style: styles.textinput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }\n      }), React.createElement(DatePicker, {\n        style: {\n          width: 200,\n          marginBottom: 10\n        },\n        date: this.state.date,\n        mode: \"date\",\n        placeholder: \"select date\",\n        format: \"DD-MM-YYYY\",\n        confirmBtnText: \"Confirm\",\n        cancelBtnText: \"Cancel\",\n        customStyles: {\n          dateIcon: {\n            position: 'absolute',\n            left: 0,\n            top: 4,\n            marginLeft: 0\n          },\n          dateInput: {\n            marginLeft: 36\n          }\n        },\n        onDateChange: function onDateChange(date) {\n          _this2.setState({\n            date: date\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }\n      }), React.createElement(View, {\n        style: styles.buttonsInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }\n      }, React.createElement(View, {\n        style: styles.buttonInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 25\n        }\n      }, React.createElement(Button, {\n        icon: React.createElement(Icon, {\n          name: \"save\",\n          size: 25,\n          type: \"entypo\",\n          color: \"white\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 37\n          }\n        }),\n        onPress: this.addTask.bind(this),\n        title: \" Enregistrer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 29\n        }\n      })), React.createElement(View, {\n        style: styles.buttonInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 25\n        }\n      }, React.createElement(Button, {\n        icon: React.createElement(Icon, {\n          name: \"cancel\",\n          size: 25,\n          type: \"MaterialIcons\",\n          color: \"white\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 37\n          }\n        }),\n        buttonStyle: {\n          backgroundColor: '#ef5350'\n        },\n        onPress: this.annullerTask.bind(this),\n        title: \" Annuler\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 29\n        }\n      })))));\n    }\n  }]);\n\n  return Input;\n}(Component);\n\nvar styles = StyleSheet.create({\n  textinput: {\n    borderWidth: 0,\n    backgroundColor: 'white',\n    borderRadius: 3,\n    paddingLeft: 5,\n    fontSize: 25,\n    marginBottom: 10,\n    marginLeft: 5,\n    marginRight: 5,\n    height: 45\n  },\n  button: {\n    margin: '3px 0'\n  },\n  add: {\n    width: 30,\n    height: 30,\n    fontSize: 40\n  },\n  buttonsInput: {\n    flex: 1,\n    flexDirection: 'row'\n  },\n  buttonInput: {\n    flex: 1,\n    height: 50,\n    padding: 5\n  }\n});\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    tasks: state.Tasks\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    addTasks: function addTasks(data) {\n      dispatch({\n        type: 'ADD_TASKS',\n        data: data\n      });\n    },\n    changeTasks: function changeTasks(data) {\n      dispatch({\n        type: 'CHANGE_TASKS',\n        data: data\n      });\n    },\n    changeShowEdit: function changeShowEdit(data) {\n      dispatch({\n        type: 'CHANGE_SHOW_EDIT'\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Input);","map":{"version":3,"sources":["/home/files/javascript/react/react-native/remider/app/components/header/layouts/input/Input.js"],"names":["React","Component","Button","Icon","connect","ADD_TASKS","DatePicker","Input","props","state","value","maxLength","date","formatDateNow","idEdit","length","tasks","isEdit","changeShowEdit","data","contentTasks","finishAt","idTasks","changeTasks","Keyboard","dismiss","addTasks","Date","dd","getDate","mm","getMonth","yyyy","getFullYear","today","text","setState","stock","dataTasks","filter","e","JSON","parse","stringify","height","marginBottom","marginTop","backgroundColor","padding","borderRadius","marginLeft","OnChange","bind","nativeEvent","key","Math","abs","lastKeyEventTimestamp","timeStamp","pop","styles","textinput","width","dateIcon","position","left","top","dateInput","buttonsInput","buttonInput","addTask","annullerTask","StyleSheet","create","borderWidth","paddingLeft","fontSize","marginRight","button","margin","add","flex","flexDirection","mapStateToProps","Tasks","mapDispatchToProps","dispatch","type"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport {TextInput, StyleSheet, View, Keyboard, Alert, Text} from 'react-native'\nimport { Button } from 'react-native-elements'\nimport { Icon } from 'react-native-elements'\nimport { connect } from \"react-redux\";\nimport {ADD_TASKS} from \"../../../../actions/TasksActions\";\nimport DatePicker from 'react-native-datepicker'\n\nclass Input extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: '',\n            maxLength: 20,\n            date: this.formatDateNow(),\n            idEdit: null\n        }\n    }\n\n    addTask () {\n        const { value, date } = this.state\n        if( value.length !== 0){\n            if (!this.props.tasks.isEdit) {\n                this.props.changeShowEdit(false)\n                    let data = {\n                        contentTasks: value,\n                        finishAt: date,\n                        idTasks: this.state.idEdit\n                    }\n                this.props.changeTasks(data)\n            } else {\n                Keyboard.dismiss()\n                this.props.changeShowEdit(false)\n                let data = {\n                    contentTasks: value,\n                    finishAt: date\n                }\n                this.props.addTasks(data)\n            }\n        }\n    }\n\n    formatDateNow () {\n        let date = new Date()\n\n        let dd = date.getDate() \n        let mm = date.getMonth() + 1 \n        let yyyy = date.getFullYear() \n\n        if (dd < 10) { \n            dd = '0' + dd\n        } \n        if (mm < 10) { \n            mm = '0' + mm\n        } \n        let today = dd + '-' + mm + '-' + yyyy\n        return today\n    }\n\n    annullerTask () {\n        Keyboard.dismiss()\n        this.props.changeShowEdit(false)\n    }\n\n    OnChange (text) {\n        if(this.state.value.length <= this.state.maxLength){\n            this.setState({ value: text })\n        }\n    }\n\n    componentDidUpdate(){\n        if (this.props.tasks.idEdit != this.state.idEdit && this.props.tasks.idEdit != '') {\n            const { tasks } = this.props\n            const stock = tasks.dataTasks.filter(e=> {\n                return e.idTasks === tasks.idEdit\n            })\n            this.setState({ idEdit: JSON.parse(JSON.stringify(this.props.tasks.idEdit))})\n            if(stock.length != 0){\n                this.setState({ value: stock[0].contentTasks, date: stock[0].finishAt})\n            }\n        }\n    }\n\n    render () {\n        return (\n            <View style={{ height: 120, marginBottom: 40, marginTop: 30 }}>\n                <View style={{ backgroundColor: '#eceff1', height: 200, padding: 10, borderRadius: 5}}>\n                    <Text \n                    style={{ marginLeft: 10, marginBottom: 3 }}>\n                        { this.state.value.length } /{ this.state.maxLength }\n                    </Text>\n\n                    <TextInput\n                        placeholder='enter votre tache'\n                        value={this.state.value}\n                        onChangeText={this.OnChange.bind(this)}\n                        maxLength={this.state.maxLength}\n                        onKeyUp={(e) => {\n                            if (e.nativeEvent.key === 'Backspace') {\n                                // Return if duration between previous key press and backspace is less than 20ms\n                                if (Math.abs(this.lastKeyEventTimestamp - e.timeStamp) <= 20) return;\n                                this.setState({value: this.state.value.pop()})\n                            } else {\n                                // Record non-backspace key event time stamp\n                                this.lastKeyEventTimestamp = e.timeStamp;\n                            }\n                        }}\n                        style={styles.textinput}/>\n                    <DatePicker\n                        style={{width: 200, marginBottom: 10}}\n                        date={this.state.date}\n                        mode=\"date\"\n                        placeholder=\"select date\"\n                        format=\"DD-MM-YYYY\"\n                        // minDate=\"01-05-2016\"\n                        // maxDate=\"06-01-2016\"\n                        confirmBtnText=\"Confirm\"\n                        cancelBtnText=\"Cancel\"\n                        customStyles={{\n                          dateIcon: {\n                            position: 'absolute',\n                            left: 0,\n                            top: 4,\n                            marginLeft: 0\n                          },\n                          dateInput: {\n                            marginLeft: 36\n                          }\n                          // ... You can check the source to find the other keys.\n                        }}\n                        onDateChange={(date) => {this.setState({date: date})}}\n                      />\n                    <View style={styles.buttonsInput}>\n                        <View style={styles.buttonInput}>\n                            <Button\n                                icon={\n                                    <Icon\n                                        name='save'\n                                        size={25}\n                                        type='entypo'\n                                        color=\"white\"\n                                    />\n                                }\n                                onPress={this.addTask.bind(this)}\n                                title=\" Enregistrer\"\n                            />\n                        </View>\n                        <View style={styles.buttonInput}>\n                            <Button\n                                icon={\n                                    <Icon\n                                        name='cancel'\n                                        size={25}\n                                        type='MaterialIcons'\n                                        color=\"white\"\n                                    />\n                                }\n                                buttonStyle={{ backgroundColor: '#ef5350' }}\n                                onPress={this.annullerTask.bind(this)}\n                                title=\" Annuler\"\n                            />\n                        </View>\n                    </View>\n                </View>\n            </View>\n        )\n    }\n}\n\nconst styles = StyleSheet.create({\n    textinput: {\n        borderWidth: 0,\n        backgroundColor: 'white',\n        borderRadius: 3,\n        paddingLeft: 5,\n        fontSize: 25,\n        marginBottom: 10,\n        marginLeft: 5,\n        marginRight: 5,\n        height: 45\n    },\n    button: {\n        margin: '3px 0'\n    },\n    add: {\n        width: 30,\n        height: 30,\n        fontSize: 40\n    },\n    buttonsInput: {\n        flex: 1,\n        flexDirection: 'row',\n    },\n    buttonInput: {\n         flex: 1,\n        height: 50,\n        padding: 5\n    }\n})\n\n\nconst mapStateToProps = state => {\n    return {  tasks: state.Tasks }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        addTasks: (data) => {\n            dispatch({ type: 'ADD_TASKS', data })\n        },\n        changeTasks: (data) => {\n            dispatch({ type: 'CHANGE_TASKS', data })\n        },\n        changeShowEdit: (data) => {\n            dispatch({ type: 'CHANGE_SHOW_EDIT' })\n        }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Input)\n"]},"metadata":{},"sourceType":"module"}